# docker-compose-dev.yml
# 로컬 개발 환경용 설정
# 사용법: docker-compose -f docker-compose-dev.yml up

services:
  # ===== PostgreSQL Database =====
  postgres:
    image: postgres:18
    container_name: postgres-db-dev
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      # Named Volume: 데이터베이스 데이터 영구 보존
      - postgres_data_dev:/var/lib/postgresql/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ===== FastAPI Backend (개발 모드) =====
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi-server-dev
    environment:
      # Backend → PostgreSQL (Docker 내부 네트워크)
      DATABASE_URL: ${DB_URL}
      # 개발 환경 플래그 (선택사항)
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # ✅ Bind Mount: 코드 변경사항 실시간 반영
      - ./backend:/backend
      # Python 캐시 제외 (선택사항)
      - /backend/__pycache__
    # ✅ --reload: 코드 변경 시 자동 재시작
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    # 개발 시 유용한 환경변수 (선택사항)
    stdin_open: true  # docker attach 가능
    tty: true         # 컬러 로그 출력

  # ===== React Frontend (개발 서버) =====
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # 개발용 Dockerfile
    container_name: react-app-dev
    ports:
      - "3000:3000"
    environment:
      # 🏠 로컬 개발: 브라우저가 localhost:8000에 API 요청
      - REACT_APP_API_URL=http://localhost:8000
      # Fast Refresh 활성화
      - FAST_REFRESH=true
      # 개발 서버 설정
      - CHOKIDAR_USEPOLLING=true  # WSL/Docker에서 파일 감지
    volumes:
      # ✅ Bind Mount: 코드 변경사항 실시간 반영
      - ./frontend:/app
      # node_modules는 컨테이너 것 사용 (성능 최적화)
      - /app/node_modules
    # ✅ npm start: React 개발 서버
    command: npm start
    stdin_open: true  # React 개발 서버에 필요
    tty: true

# ===== Named Volumes =====
volumes:
  postgres_data_dev: